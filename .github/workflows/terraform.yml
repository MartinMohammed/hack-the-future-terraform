name: "Terraform CI/CD"

on:
  push:
    branches: ["main", "dev"]
    paths:
      - "**/*.tf"
      - "**/*.tfvars"
      - ".github/workflows/terraform.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "**/*.tf"
      - "**/*.tfvars"
      - ".github/workflows/terraform.yml"

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Apply
        # don't apply changes on pull requests and only on main branch if new changes are pushed e.x. a new PR is created
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && github.event_name != 'pull_request'
        run: terraform apply -auto-approve
